name: Run Kubernetes end-to-end tests
on:
  pull_request: {}
  push:
    branches:
      - k8s-tests

jobs:

  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        kind_image:
         - kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
         - kindest/node:v1.20.7@sha256:cbeaf907fc78ac97ce7b625e4bf0de16e3ea725daf6b04f930bd14c67c671ff9
         - kindest/node:v1.19.11@sha256:07db187ae84b4b7de440a73886f008cf903fcf5764ba8106a9fd5243d6f32729
         - kindest/node:v1.18.19@sha256:7af1492e19b3192a79f606e43c35fb741e520d195f96399284515f077b3b622c
         - kindest/node:v1.17.17@sha256:66f1d0d91a88b8a001811e2f1054af60eef3b669a9a74f9b6db871f2f1eeed00
         - kindest/node:v1.16.15@sha256:83067ed51bf2a3395b24687094e283a7c7c865ccc12a8b1d7aa673ba0c5e8861
         - kindest/node:v1.15.12@sha256:b920920e1eda689d9936dfcf7332701e80be12566999152626b2c9d730397a95
         - kindest/node:v1.14.10@sha256:f8a66ef82822ab4f7569e91a5bccaf27bceee135c1457c512e54de8c6f7219f8
    steps:
      - name: Generate unique random tag for run
        id: generate_random_id
        run: echo "::set-output name=random_id::RUN--$(date +%s)"

      - uses: actions/checkout@v2.3.4

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.7.2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
          cache: 'pip'

# See: https://github.com/helm/chart-testing-action
#      - name: Set up chart-testing
#        uses: helm/chart-testing-action@v2.2.0

      - name: Create Kind cluster
        uses: helm/kind-action@v1.2.0
        with:
          node_image: ${{ matrix.kind_image }}

      # We need to have the names in Cronitor be separate, so if we use separate namespaces,
      # we can kind of "cheat" a bit and get unique monitor names
      # This is _not_ needed for separation, since every Github Actions job in the matrix will
      # run in its own separate environment and Kind cluster.
      - name: Create namespace "${{ steps.generate_random_id.outputs.random_id }}"
        run: >
          kubectl create ns "${{ steps.generate_random_id.outputs.random_id }}"
          kubectl config set-context --current --namespace="${{ steps.generate_random_id.outputs.random_id }}"

      - name: Add API key
        run: >
          kubectl create secret generic cronitor-secret --from-literal=CRONITOR_API_KEY=${{ secrets.CRONITOR_API_KEY }}

      - name: Apply test YAML
        run: kubectl apply --recursive -f e2e-test/resources/

      - name: Sleep for 3 minutes to let events populate
        run: sleep $((60 * 3))
        shell: bash

      - name: Install Cronitor Kubernetes agent
        run: |
          helm upgrade --install cronitor-kubernetes ./charts/cronitor-kubernetes/ \
            --namespace "${{ steps.generate_random_id.outputs.random_id }}" \
            --set credentials.secretName=cronitor-secret \
            --set credentials.secretKey=CRONITOR_API_KEY \
            --set config.defaultEnvironment=ci \
            --set config.tags='ci:${{ steps.generate_random_id.outputs.random_id }}'

      - name: Sleep for 3 more minutes to let the agent run
        run: sleep $((60 * 3))
        shell: bash

      - run: pip install -r requirements.txt
        working-directory: ./e2e-test/api/
      
      - name: Delete created monitors
        working-directory: ./e2e-test/api/
        env: 
          CRONITOR_API_KEY: ${{ secrets.CRONITOR_API_KEY }}
        run: |
          python main.py --ci-tag 'ci:${{ steps.generate_random_id.outputs.random_id }}'