apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cronitor-kubernetes-agent.fullname" . }}
  labels:
    {{ include "cronitor-kubernetes-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cronitor-kubernetes-agent.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cronitor-kubernetes-agent.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "cronitor-kubernetes-agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{ if .Values.image }}
          {{/* Useful for overrides, like when using Skaffold */}}
          image: {{ .Values.image | quote }}
          {{ else }}
          image: "{{ .Values.repository }}:{{ .Values.imageTag | default .Chart.AppVersion }}"
          {{ end }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - agent
            - "--ship-logs={{ .Values.config.shipLogs | required "config.shipLogs must have a value of true or false" }}"
            {{ if .Values.config.logLevel }}
            - "--log-level={{ .Values.config.logLevel }}"
            {{ end }}
            {{ if eq .Values.rbac.clusterScope "namespace" }}
            - "--namespace={{ .Release.Namespace }}"
            {{ end }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CRONITOR_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ required "A valid name for a Secret holding the API key is required!" .Values.credentials.secretName }}
                  key: {{ required "A valid key in a Secret holding the API key is required!" .Values.credentials.secretKey }}
          envFrom:
            - configMapRef:
                name: {{ include "cronitor-kubernetes-agent.fullname" . }}-environment-configmap
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
{{/*          livenessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              path: /*/}}
{{/*              port: http*/}}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
